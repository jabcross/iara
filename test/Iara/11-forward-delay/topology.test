// RUN: mkdir -p "`dirname %s`/build"
// RUN: cd "`dirname %s`/build"
// RUN: iara-opt --flatten --sdf-to-tasks  %s > schedule.mlir
// RUN: mlir-to-llvmir.sh schedule.mlir
// RUN: clang++ -g -lomp -lpthread -fuse-ld=mold\
// RUN:    -xir schedule.ll \
// RUN:    -xc++ "`dirname %s`/kernels.cpp" \
// RUN:     $IARA_DIR/runtime/IaraRuntime.cpp \
// RUN:    -I. -I$IARA_DIR/include -DIARA_RUNTIME_DEBUG
// RUN: ./a.out > output.txt
// RUN: FileCheck %s < output.txt

// forward delay

// Two nodes

iara.actor @a {
    iara.out : tensor<1xi32>
}

iara.actor @b {
    iara.in : tensor<1xi32>
}

iara.actor @run  {
  %0 = iara.node @a out: tensor<1xi32>
  %1 = iara.edge %0 : tensor<1xi32> -> tensor<1xi32> {delay = array<i32: 0, 1, 2, 3>}
  iara.node @b in %1: tensor<1xi32>
} { }

// CHECK: 0 1 2 3 4